TITLE: NASHVILLE HOUSING DATA CLEANING, USING BIGQUERY



*******Select Data I will Be Working With

SELECT  *
FROM   `data-analytics-project-387607.Porfolio_Project.Nashville Housing` 


******POPULATE PROPERTYADDRESS


SELECT  *
FROM   `data-analytics-project-387607.Porfolio_Project.Nashville Housing` 
ORDER BY ParcelID


********SELFJOIN to help Populate the PropertyAddress

SELECT  a.ParcelID, a.PropertyAddress,b.ParcelID, b.PropertyAddress, IFNULL(a.PropertyAddress,b.PropertyAddress) as Property_Address
FROM   `data-analytics-project-387607.Porfolio_Project.Nashville Housing` a
JOIN   `data-analytics-project-387607.Porfolio_Project.Nashville Housing` b
  ON    a.ParcelID = b.ParcelID
  AND   a.UniqueID_ <> b.UniqueID_
WHERE a.PropertyAddress is Null 


******Breaking PropertyAdress into Two Columns( Address and City_Name)
******N/B this Particular function works on BigQuery
****** For MySQL, use "SUBSTRING" or "PARSENAME" Function

SELECT  PropertyAddress,
  REGEXP_EXTRACT(PropertyAddress, r'^(.*),') AS Address,
  REGEXP_EXTRACT(PropertyAddress, r',\s*(.*)$') AS City_Name,
FROM `data-analytics-project-387607.Porfolio_Project.Nashville Housing` 


*******Replacing 'Y' with Yes and 'N' with 'No' in SalesAsVacant Column

SELECT DISTINCT (SoldAsVacant), COUNT(SoldAsVacant),
FROM `data-analytics-project-387607.Porfolio_Project.Nashville Housing`
GROUP BY 1


SELECT
  CASE 
    WHEN SoldAsVacant = 'Y' THEN 'Yes'
    WHEN SoldAsVacant = 'N' THEN 'No'
    ELSE SoldAsVacant
  END AS Sold_As_Vacant
 FROM `data-analytics-project-387607.Porfolio_Project.Nashville Housing` 



